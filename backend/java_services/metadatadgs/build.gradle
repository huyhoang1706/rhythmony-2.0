plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'com.netflix.dgs.codegen' version '6.2.1'
	id "com.google.protobuf" version "0.9.4"
}

group = 'com.rhythmony'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(23)
	}
}

repositories {
	mavenCentral()
}

ext {
	set('netflixDgsVersion', "9.1.3")
}

def grpcVersion = '1.61.1'
def protobufVersion = '3.25.5'
def protocVersion = protobufVersion

dependencies {
	implementation "com.google.protobuf:protobuf-java:${protobufVersion}"
	implementation "io.grpc:grpc-stub:${grpcVersion}"
	implementation "io.grpc:grpc-services:${grpcVersion}"
	implementation "io.grpc:grpc-protobuf:${grpcVersion}"
	implementation 'net.devh:grpc-client-spring-boot-starter:3.1.0.RELEASE'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.netflix.graphql.dgs:graphql-dgs-spring-graphql-starter'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'com.netflix.graphql.dgs:graphql-dgs-spring-graphql-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	if (JavaVersion.current().isJava9Compatible()) {
		compileOnly 'org.apache.tomcat:annotations-api:6.0.53'
		annotationProcessor "jakarta.annotation:jakarta.annotation-api:1.3.5"
	}
}

dependencyManagement {
	imports {
		mavenBom "com.netflix.graphql.dgs:graphql-dgs-platform-dependencies:${netflixDgsVersion}"
	}
}

protobuf {
	protoc {
		artifact = "com.google.protobuf:protoc:${protobufVersion}"
	}
	plugins {
		grpc {
			artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
		}
	}
	generateProtoTasks {
		all()*.plugins {
			grpc {}
		}
	}
}

generateJava {
	schemaPaths = ["${projectDir}/src/main/resources/schema"]
	packageName = 'com.rhythmony.metadatadgs.codegen'
	generateClient = true
}

tasks.named('test') {
	useJUnitPlatform()
}
